{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./ChildrenForm.module.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Form from \"react-bootstrap/Form\";\nimport { ArrowLeftCircleFill, Trash } from 'react-bootstrap-icons';\nimport Navbar from \"react-bootstrap/Navbar\";\nexport default function ChildrenForm() {\n  const {\n    0: hasChildren,\n    1: updateHasChildren\n  } = useState(false);\n  const {\n    0: numberOfChildren,\n    1: updateNumberOfChildren\n  } = useState([{\n    id: 1,\n    age: undefined\n  }]);\n  const now = 15;\n\n  const progressInstance = __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    now: now\n  });\n\n  const dispatch = useContext(DispatchContext);\n  const router = useRouter();\n  useEffect(() => {\n    dispatch({\n      type: \"CHILDREN_AGE_ARRAY\",\n      childrenAgeArray: numberOfChildren\n    });\n    dispatch({\n      type: \"NUMBER_OF_CHILDREN\",\n      numberOfChildren: numberOfChildren.length\n    });\n  }, [numberOfChildren]); // Update numberOfChildren state\n\n  function updateData(e) {\n    // Grab the id of the input element and the typed value\n    const {\n      id,\n      value\n    } = e.target; // Find the item in the array that has the same id\n    // Convert the grabed id from string to Number\n\n    const itemIndex = numberOfChildren.findIndex(item => item.id === Number(id)); // If the itemIndex is -1 that means it doesn't exist in the array\n\n    if (itemIndex !== -1) {\n      // Make a copy of the state\n      const children = [...numberOfChildren]; // The child item\n\n      const child = children[itemIndex]; // Update the child's age\n\n      children.splice(itemIndex, 1, _objectSpread(_objectSpread({}, child), {}, {\n        age: value\n      })); // Update the state\n\n      updateNumberOfChildren(children);\n    }\n  }\n\n  function deleteChild(e) {\n    const {\n      id,\n      value\n    } = e.target; // Find the item in the array that has the same id\n    // Convert the grabed id from string to Number\n\n    const itemIndex = numberOfChildren.findIndex(item => item.id === Number(id)); // Make a copy of the state\n\n    const children = [...numberOfChildren]; // The child item\n\n    const child = children[itemIndex]; // remove the child from the array\n\n    children.splice(itemIndex, -1);\n    console.log('===>', children); // Update the state\n\n    updateNumberOfChildren(children);\n  }\n\n  return __jsx(\"div\", null, __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 10,\n      offset: 1\n    },\n    md: {\n      span: 10,\n      offset: 1\n    },\n    lg: {\n      span: 10,\n      offset: 1\n    }\n  }, progressInstance)), __jsx(\"br\", null), __jsx(Form, {\n    onSubmit: e => {\n      e.preventDefault();\n    }\n  }, __jsx(\"br\", null), __jsx(\"h2\", {\n    className: styles.header\n  }, \"Do you have children?\"), __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    xs: 6,\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 3,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: async () => {\n      await updateHasChildren(true);\n      dispatch({\n        type: \"HAS_CHILDREN\",\n        hasChildren: true\n      });\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\"\n  }, \"Yes\"), \" \"), __jsx(Col, {\n    xs: 6,\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: async e => {\n      e.preventDefault();\n      await updateHasChildren(false);\n      dispatch({\n        type: \"HAS_CHILDREN\",\n        hasChildren: false\n      });\n      router.push('/dob');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    type: \"submit\",\n    size: \"lg\"\n  }, \"No\"), \" \")))), hasChildren === true && __jsx(Form, {\n    onSubmit: e => {\n      console.log('SUBMIT');\n      e.preventDefault();\n      dispatch({\n        type: \"HAS_CHILDREN\",\n        hasChildren: true\n      });\n      dispatch({\n        type: \"NUMBER_OF_CHILDREN\",\n        numberOfChildren: numberOfChildren.length\n      });\n      dispatch({\n        type: \"CHILDREN_AGE_ARRAY\",\n        childrenAgeArray: numberOfChildren\n      });\n      router.push('/secondaryEducation');\n    }\n  }, __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 12\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.header\n  }, \"How old are your children?\"))), __jsx(Row, null, numberOfChildren.map((child, index) => __jsx(React.Fragment, {\n    key: index + 40\n  }, __jsx(Col, {\n    xs: {\n      span: 4,\n      offset: 2\n    },\n    md: {\n      span: 3,\n      offset: 3\n    },\n    lg: {\n      span: 3,\n      offset: 3\n    },\n    key: index + 30\n  }, __jsx(\"h5\", {\n    className: styles.header\n  }, \"Child #\", index + 1)), __jsx(Col, {\n    xs: {\n      span: 4\n    },\n    md: {\n      span: 3\n    },\n    lg: {\n      span: 3\n    },\n    key: index + 20\n  }, __jsx(InputGroup, {\n    className: \"mb-3\"\n  }, __jsx(FormControl, {\n    id: index + 1,\n    key: index + 60,\n    placeholder: \"Age\",\n    \"aria-label\": \"Age\",\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: e => updateData(e)\n  }))), index > 0 ? __jsx(Col, {\n    xs: {\n      span: 1\n    },\n    md: {\n      span: 1\n    },\n    lg: {\n      span: 1\n    },\n    key: index + 50\n  }, __jsx(Trash, {\n    size: 30,\n    onClick: e => {\n      deleteChild(e);\n      console.log('delete');\n    }\n  })) : __jsx(Col, null)))), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 8,\n      offset: 2\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: e => {\n      e.preventDefault();\n      updateNumberOfChildren([...numberOfChildren, {\n        id: numberOfChildren.length + 1,\n        age: undefined\n      }]);\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    type: \"submit\",\n    size: \"lg\"\n  }, \"Add Child\"), \" \")), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 8,\n      offset: 2\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    style: {\n      width: \"100%\"\n    },\n    type: \"submit\",\n    variant: \"outline-primary\",\n    size: \"lg\"\n  }, \"Next\"), \" \"))));\n}","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/components/ChildrenForm.js"],"names":["React","useContext","useState","useEffect","useRouter","Button","styles","Container","Row","Col","DispatchContext","FormControl","InputGroup","ProgressBar","Form","ArrowLeftCircleFill","Trash","Navbar","ChildrenForm","hasChildren","updateHasChildren","numberOfChildren","updateNumberOfChildren","id","age","undefined","now","progressInstance","height","dispatch","router","type","childrenAgeArray","length","updateData","e","value","target","itemIndex","findIndex","item","Number","children","child","splice","deleteChild","console","log","span","offset","preventDefault","header","width","push","map","index"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./ChildrenForm.module.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Form from \"react-bootstrap/Form\";\nimport {ArrowLeftCircleFill, Trash} from 'react-bootstrap-icons';\nimport Navbar from \"react-bootstrap/Navbar\";\n\n\nexport default function ChildrenForm() {\n    const [hasChildren, updateHasChildren] = useState(false);\n    const [numberOfChildren, updateNumberOfChildren] = useState([\n        { id: 1, age: undefined }\n    ]);\n    const now = 15;\n    const progressInstance = <ProgressBar style={{height: '0.5rem'}} now={now} />;\n    const dispatch = useContext(DispatchContext);\n    const router = useRouter();\n\n    useEffect(() => {\n        dispatch({ type: \"CHILDREN_AGE_ARRAY\", childrenAgeArray: numberOfChildren });\n        dispatch({ type: \"NUMBER_OF_CHILDREN\", numberOfChildren: numberOfChildren.length });\n    }, [numberOfChildren]);\n\n    // Update numberOfChildren state\n    function updateData(e) {\n        // Grab the id of the input element and the typed value\n        const { id, value } = e.target;\n        // Find the item in the array that has the same id\n        // Convert the grabed id from string to Number\n        const itemIndex = numberOfChildren.findIndex(\n            item => item.id === Number(id)\n        );\n\n        // If the itemIndex is -1 that means it doesn't exist in the array\n        if (itemIndex !== -1) {\n            // Make a copy of the state\n            const children = [...numberOfChildren];\n            // The child item\n            const child = children[itemIndex];\n            // Update the child's age\n            children.splice(itemIndex, 1, { ...child, age: value });\n            // Update the state\n            updateNumberOfChildren(children);\n        }\n    }\n\n    function deleteChild(e) {\n        const { id, value } = e.target;\n        // Find the item in the array that has the same id\n        // Convert the grabed id from string to Number\n        const itemIndex = numberOfChildren.findIndex(\n            item => item.id === Number(id)\n        );\n        // Make a copy of the state\n        const children = [...numberOfChildren];\n        // The child item\n        const child = children[itemIndex];\n        // remove the child from the array\n        children.splice(itemIndex, -1);\n        console.log('===>', children);\n        // Update the state\n        updateNumberOfChildren(children);\n    }\n\n    return (\n        <div>\n            <br />\n            <Row>\n                <Col\n                    xs={{ span: 10, offset: 1 }}\n                    md={{ span: 10, offset: 1 }}\n                    lg={{ span: 10, offset: 1 }}\n                >\n                    {progressInstance}\n                </Col>\n            </Row>\n            <br />\n            <Form\n                onSubmit={e => {\n                    e.preventDefault();\n                }}\n            >\n                <br />\n                <h2 className={styles.header}>Do you have children?</h2>\n                <Container>\n                    <Row>\n                        <Col xs={6} md={{ span: 6 }} lg={{ span: 3, offset: 3 }}>\n                            <Button\n                                className=\"align-button\"\n                                onClick={async () => {\n                                    await updateHasChildren(true);\n                                    dispatch({ type: \"HAS_CHILDREN\", hasChildren: true });\n\n                                }}\n                                style={{ width: \"100%\" }}\n                                variant=\"outline-primary\"\n                                size=\"lg\"\n                            >\n                                Yes\n                            </Button>{\" \"}\n                        </Col>\n                        <Col xs={6} md={{ span: 6 }} lg={{ span: 3 }}>\n                            <Button\n                                className=\"align-button\"\n                                onClick={async e => {\n                                    e.preventDefault();\n                                    await updateHasChildren(false);\n                                    dispatch({ type: \"HAS_CHILDREN\", hasChildren: false });\n                                    router.push('/dob')\n                                }}\n                                style={{ width: \"100%\" }}\n                                variant=\"outline-primary\"\n                                type=\"submit\"\n                                size=\"lg\"\n                            >\n                                No\n                            </Button>{\" \"}\n                        </Col>\n                    </Row>\n                </Container>\n            </Form>\n            {hasChildren === true && (\n                <Form\n                    onSubmit={e => {\n                        console.log('SUBMIT')\n                        e.preventDefault();\n                        dispatch({ type: \"HAS_CHILDREN\", hasChildren: true });\n                        dispatch({ type: \"NUMBER_OF_CHILDREN\", numberOfChildren: numberOfChildren.length });\n                        dispatch({ type: \"CHILDREN_AGE_ARRAY\", childrenAgeArray: numberOfChildren });\n                        router.push('/secondaryEducation')\n                    }}\n                >\n                    <br />\n                    <Row>\n                        <Col\n                            xs={{ span: 12 }}\n                            md={{ span: 6, offset: 3 }}\n                            lg={{ span: 6, offset: 3 }}\n                        >\n                            <h2 className={styles.header}>How old are your children?</h2>\n                        </Col>\n                    </Row>\n                    <Row>\n                        {numberOfChildren.map((child, index) => (\n                            <React.Fragment key={index + 40}>\n                                    <Col\n                                        xs={{ span: 4, offset: 2 }}\n                                        md={{ span: 3, offset: 3 }}\n                                        lg={{ span: 3, offset: 3 }}\n                                        key={index + 30}\n                                    >\n                                        <h5 className={styles.header}>Child #{index + 1}</h5>\n                                    </Col>\n                                    <Col\n                                        xs={{ span: 4 }}\n                                        md={{ span: 3 }}\n                                        lg={{ span: 3 }}\n                                        key={index + 20}\n                                    >\n                                        <InputGroup className=\"mb-3\">\n                                            <FormControl\n                                                id={index + 1}\n                                                key={index + 60}\n                                                placeholder=\"Age\"\n                                                aria-label=\"Age\"\n                                                aria-describedby=\"basic-addon2\"\n                                                onChange={e => updateData(e)}\n                                            />\n                                        </InputGroup>\n                                    </Col>\n                                {index > 0 ? (\n                                    <Col\n                                        xs={{ span: 1 }}\n                                        md={{ span: 1 }}\n                                        lg={{ span: 1 }}\n                                        key={index + 50}\n                                    >\n                                        <Trash size={30} onClick={(e) => {\n                                            deleteChild(e);\n                                            console.log('delete')\n                                        }}/>\n                                    </Col>\n                                ) : (\n                                    <Col>\n                                    </Col>\n                                )}\n\n\n                            </React.Fragment>\n                        ))}\n                    </Row>\n                    <Row>\n                        <Col\n                            xs={{ span: 8, offset: 2 }}\n                            md={{ span: 6, offset: 3 }}\n                            lg={{ span: 6, offset: 3 }}\n                        >\n                            <Button\n                                className=\"align-button\"\n                                onClick={e => {\n                                    e.preventDefault();\n                                    updateNumberOfChildren([\n                                        ...numberOfChildren,\n                                        { id: numberOfChildren.length + 1, age: undefined }\n                                    ]);\n                                }}\n                                style={{ width: \"100%\" }}\n                                variant=\"outline-primary\"\n                                type=\"submit\"\n                                size=\"lg\"\n                            >\n                                Add Child\n                            </Button>{\" \"}\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col\n                            xs={{ span: 8, offset: 2 }}\n                            md={{ span: 6, offset: 3 }}\n                            lg={{ span: 6, offset: 3 }}\n                        >\n                            <Button\n                                style={{ width: \"100%\" }}\n                                type=\"submit\"\n                                variant=\"outline-primary\"\n                                size=\"lg\"\n                            >\n                                Next\n                            </Button>{\" \"}\n                        </Col>\n                    </Row>\n                </Form>\n            )}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}