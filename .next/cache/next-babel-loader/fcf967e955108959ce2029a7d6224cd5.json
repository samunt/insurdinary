{"ast":null,"code":"import { useEffect, useReducer } from 'react';\n\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n  // make piece of state based on of value in localstorage (or default)\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, defaultVal, () => {\n    let val;\n\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n    } catch (e) {\n      val = defaultVal;\n    }\n\n    return val;\n  });\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state]);\n  return [state, dispatch];\n}\n\nexport { useLocalStorageReducer };","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/hooks/useLocalStorageReducer.js"],"names":["useEffect","useReducer","useLocalStorageReducer","key","defaultVal","reducer","state","dispatch","val","JSON","parse","window","localStorage","getItem","String","e","setItem","stringify"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,UAAnB,QAAoC,OAApC;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqCC,UAArC,EAAiDC,OAAjD,EAA0D;AACtD;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,UAAU,CAACI,OAAD,EAAUD,UAAV,EAAsB,MAAM;AAC5D,QAAII,GAAJ;;AACA,QAAI;AACAA,MAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CACFC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BV,GAA5B,KAAoCW,MAAM,CAACV,UAAD,CADxC,CAAN;AAGH,KAJD,CAKA,OAAOW,CAAP,EAAS;AACLP,MAAAA,GAAG,GAAGJ,UAAN;AACH;;AACD,WAAOI,GAAP;AACH,GAXmC,CAApC;AAYAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4Bb,GAA5B,EAAiCM,IAAI,CAACQ,SAAL,CAAeX,KAAf,CAAjC;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH;;AACD,SAAQL,sBAAR","sourcesContent":["import {useEffect, useReducer} from 'react';\n\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n    // make piece of state based on of value in localstorage (or default)\n    const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n        let val;\n        try {\n            val = JSON.parse(\n                window.localStorage.getItem(key) || String(defaultVal)\n            )\n        }\n        catch (e){\n            val = defaultVal\n        }\n        return val\n    });\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state))\n    }, [state]);\n    return [state, dispatch]\n}\nexport {useLocalStorageReducer}\n"]},"metadata":{},"sourceType":"module"}