{"ast":null,"code":"var _jsxFileName = \"/Users/sammyunterman/WebstormProjects/react-next/pages/post.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { withRouter } from \"next/router\";\n\nconst Post = ({\n  id,\n  comments\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, \"comments for post # \", id), comments.map(comment => __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }\n}, comment.email)));\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n  const {\n    data\n  } = res;\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/pages/post.js"],"names":["React","axios","withRouter","Post","id","comments","map","comment","email","getInitialProps","query","res","get","data"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,aAAzB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAD,KACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyBD,EAAzB,CADJ,EAEKC,QAAQ,CAACC,GAAT,CAAaC,OAAO,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIA,OAAO,CAACC,KAAZ,CADH,CAFL,CADJ;;AAQAL,IAAI,CAACM,eAAL,GAAuB,OAAM;AAACC,EAAAA;AAAD,CAAN,KAAkB;AACrC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,wDAAV,CAAlB;AACA,QAAM;AAACC,IAAAA;AAAD,MAASF,GAAf;AACA,yCAAWD,KAAX;AAAkBL,IAAAA,QAAQ,EAAEQ;AAA5B;AACH,CAJD;;AAKA,eAAeX,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {withRouter} from \"next/router\";\n\nconst Post = ({id, comments}) => (\n    <div>\n        <h1>comments for post # {id}</h1>\n        {comments.map(comment => (\n            <p>{comment.email}</p>\n        ))}\n    </div>\n);\nPost.getInitialProps = async({query}) => {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n    const {data} = res;\n    return {...query, comments: data};\n};\nexport default withRouter(Post);\n"]},"metadata":{},"sourceType":"module"}