{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from '../components/Navbar';\nimport PageContent from '../components/PageContent';\nimport { LanguageProvider } from '../contexts/LanguageContext';\nimport { ThemeProvider } from \"../contexts/ThemeContext\";\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(React.Fragment, null, __jsx(ThemeProvider, null, __jsx(LanguageProvider, null, __jsx(PageContent, null, __jsx(Navbar, null), __jsx(Component, pageProps)))));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/pages/_app.js"],"names":["Navbar","PageContent","LanguageProvider","ThemeProvider","MyApp","Component","pageProps"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,gBAAR,QAA+B,6BAA/B;AACA,SAAQC,aAAR,QAA4B,0BAA5B;;AACA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AACrC,SACI,4BACI,MAAC,aAAD,QACI,MAAC,gBAAD,QACI,MAAC,WAAD,QACI,MAAC,MAAD,OADJ,EAEI,MAAC,SAAD,EAAeA,SAAf,CAFJ,CADJ,CADJ,CADJ,CADJ;AAcH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA3BSF,K;AA6BT,eAAeA,KAAf","sourcesContent":["import Navbar from '../components/Navbar';\nimport PageContent from '../components/PageContent';\nimport {LanguageProvider} from '../contexts/LanguageContext'\nimport {ThemeProvider} from \"../contexts/ThemeContext\";\nfunction MyApp({ Component, pageProps }) {\n    return (\n        <>\n            <ThemeProvider>\n                <LanguageProvider>\n                    <PageContent>\n                        <Navbar/>\n                        <Component {...pageProps} />\n\n                    </PageContent>\n                </LanguageProvider>\n            </ThemeProvider>\n\n        </>\n        )\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}