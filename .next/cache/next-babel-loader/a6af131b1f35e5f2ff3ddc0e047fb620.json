{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from '../styles/FormStyles';\nimport { DispatchContext } from \"../context/forms.context\";\nimport { LanguageContext } from \"../contexts/LanguageContext\";\nconst words = {\n  english: {\n    email: \"email\",\n    signIn: \"sign in\",\n    password: \"password\",\n    remember: \"remember me\"\n  },\n  french: {\n    email: \"adresse electronique\",\n    signIn: \"se conntetor\",\n    password: \"mot de passe\",\n    remember: \"souviens\"\n  },\n  spanish: {\n    email: \"correo electronico\",\n    signIn: \"registrarse\",\n    password: \"contrasena\",\n    remember: \"recuerdame\"\n  }\n};\n\nfunction Index(props) {\n  const {\n    language,\n    changeLanguage\n  } = useContext(LanguageContext);\n  const {\n    classes\n  } = props;\n  const {\n    email,\n    signIn,\n    password,\n    remember\n  } = words[language];\n  return __jsx(\"main\", {\n    className: classes.main\n  }, __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(Avatar, {\n    className: classes.avatarClass\n  }, __jsx(LockOutlinedIcon, null)), __jsx(Typography, {\n    variant: \"h5\"\n  }, \"Sign In\"), __jsx(\"form\", {\n    className: classes.form\n  }, __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"email\"\n  }, email), __jsx(Input, {\n    id: \"email\",\n    name: \"email\",\n    autoFocus: true\n  })), __jsx(FormControl, {\n    margin: \"normal\",\n    required: true,\n    fullWidth: true\n  }, __jsx(InputLabel, {\n    htmlFor: \"password\"\n  }, password), __jsx(Input, {\n    id: \"password\",\n    name: \"password\",\n    autoFocus: true\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      color: \"primary\"\n    }),\n    label: remember\n  }), __jsx(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    fullWidth: true,\n    color: \"primary\",\n    className: classes.submitClass\n  }, signIn))));\n}\n\nexport default withStyles(styles)(Index); // get intiial props runs first time on the server,\n// and each consecutive time on the client\n// Index.getInitialProps = async (ctx) => {\n//\n//     // const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\n//     // const {data} = res;\n//     // return {posts: data} //must be an object\n//     return {}\n//\n// };","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/pages/index.js"],"names":["React","useContext","Avatar","Button","FormControl","FormControlLabel","Checkbox","Input","InputLabel","LockOutlinedIcon","Paper","Typography","MenuItem","Select","withStyles","styles","DispatchContext","LanguageContext","words","english","email","signIn","password","remember","french","spanish","Index","props","language","changeLanguage","classes","main","paper","avatarClass","form","submitClass"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\"\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport styles from '../styles/FormStyles';\nimport {DispatchContext} from \"../context/forms.context\";\nimport {LanguageContext} from \"../contexts/LanguageContext\";\nconst words = {\n    english: {\n        email: \"email\",\n        signIn: \"sign in\",\n        password: \"password\",\n        remember: \"remember me\"\n    },\n    french: {\n        email: \"adresse electronique\",\n        signIn: \"se conntetor\",\n        password: \"mot de passe\",\n        remember: \"souviens\"\n\n    },\n    spanish: {\n        email: \"correo electronico\",\n        signIn: \"registrarse\",\n        password: \"contrasena\",\n        remember: \"recuerdame\"\n\n    }\n};\nfunction Index(props) {\n    const {language, changeLanguage} = useContext(LanguageContext)\n    const {classes} = props;\n    const {email, signIn, password, remember} = words[language];\n    return (\n        <main className={classes.main}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatarClass}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography variant='h5'>Sign In</Typography>\n                {/*<Select value={language} onChange={changeLanguage}>*/}\n                {/*    <MenuItem value='english'>English</MenuItem>*/}\n                {/*    <MenuItem value='french'>French</MenuItem>*/}\n                {/*    <MenuItem value='spanish'>Spanish</MenuItem>*/}\n                {/*</Select>*/}\n                <form className={classes.form}>\n                    <FormControl margin='normal' required fullWidth>\n                        <InputLabel htmlFor='email'>{email}</InputLabel>\n                        <Input id='email' name='email' autoFocus/>\n                    </FormControl>\n                    <FormControl margin='normal' required fullWidth>\n                        <InputLabel htmlFor='password'>{password}</InputLabel>\n                        <Input id='password' name='password' autoFocus/>\n                    </FormControl>\n                    <FormControlLabel control={<Checkbox color='primary'/>} label={remember}></FormControlLabel>\n                    <Button variant='contained' type='submit' fullWidth color='primary' className={classes.submitClass}>{signIn}</Button>\n                </form>\n            </Paper>\n        </main>\n    )\n}\nexport default withStyles(styles)(Index)\n\n\n// get intiial props runs first time on the server,\n// and each consecutive time on the client\n// Index.getInitialProps = async (ctx) => {\n//\n//     // const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\n//     // const {data} = res;\n//     // return {posts: data} //must be an object\n//     return {}\n//\n// };\n\n"]},"metadata":{},"sourceType":"module"}