{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { createContext } from \"react\";\nimport useToggleState from '../hooks/useToggleState';\nexport var ThemeContext = createContext();\nexport function ThemeProvider(props) {\n  _s();\n\n  var _useToggleState = useToggleState(false),\n      _useToggleState2 = _slicedToArray(_useToggleState, 2),\n      isDarkMode = _useToggleState2[0],\n      toggleTheme = _useToggleState2[1];\n\n  return __jsx(ThemeContext.Provider, {\n    value: {\n      isDarkMode: isDarkMode,\n      toggleTheme: toggleTheme\n    }\n  }, props.children);\n}\n\n_s(ThemeProvider, \"MH2r/Y8mCyt6qat3zMjQahePySo=\", false, function () {\n  return [useToggleState];\n});\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/contexts/ThemeContext.js"],"names":["React","createContext","useToggleState","ThemeContext","ThemeProvider","props","isDarkMode","toggleTheme","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAO,IAAMC,YAAY,GAAGF,aAAa,EAAlC;AAEP,OAAO,SAASG,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA,wBACCH,cAAc,CAAC,KAAD,CADf;AAAA;AAAA,MAC1BI,UAD0B;AAAA,MACdC,WADc;;AAEjC,SACI,MAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACD,MAAAA,UAAU,EAAVA,UAAD;AAAaC,MAAAA,WAAW,EAAXA;AAAb;AAA9B,KACKF,KAAK,CAACG,QADX,CADJ;AAKH;;GAPeJ,a;UACsBF,c;;;KADtBE,a","sourcesContent":["import React, {createContext} from \"react\";\nimport useToggleState from '../hooks/useToggleState';\nexport const ThemeContext = createContext();\n\nexport function ThemeProvider(props) {\n    const [isDarkMode, toggleTheme] = useToggleState(false);\n    return (\n        <ThemeContext.Provider value={{isDarkMode, toggleTheme}}>\n            {props.children}\n        </ThemeContext.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}