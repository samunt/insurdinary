{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./rentOrOwnForm.module.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { QuestionCircle } from \"react-bootstrap-icons\";\nexport default function SavingsForm() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useContext(DispatchContext);\n\n  var _useState = useState(false),\n      hasSavings = _useState[0],\n      setHasSavings = _useState[1]; //has life insurance\n\n\n  var _useState2 = useState(''),\n      hasRetirementSavings = _useState2[0],\n      setHasRetirementSavings = _useState2[1];\n\n  var _useState3 = useState(''),\n      hasNonRetirementSavings = _useState3[0],\n      setHasNonRetirementSavings = _useState3[1]; // modal\n\n\n  var _useState4 = useState(false),\n      showTitle = _useState4[0],\n      setShowTitle = _useState4[1];\n\n  var handleCloseTitle = function handleCloseTitle() {\n    return setShowTitle(false);\n  };\n\n  var _useState5 = useState(false),\n      showOwnABusiness = _useState5[0],\n      setShowOwnABusiness = _useState5[1];\n\n  var handleCloseOwnABusiness = function handleCloseOwnABusiness() {\n    return setShowOwnABusiness(false);\n  };\n\n  var _useState6 = useState(false),\n      showBenefitPension = _useState6[0],\n      setShowBenefitPension = _useState6[1];\n\n  var handleCloseBenefitPension = function handleCloseBenefitPension() {\n    return setShowBenefitPension(false);\n  }; // progress bar\n\n\n  var now = 85;\n\n  var progressInstance = __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    now: now\n  });\n\n  useEffect(function () {\n    dispatch({\n      type: \"HAS_SAVINGS\",\n      hasSavings: hasSavings\n    });\n\n    if (hasSavings === false) {\n      dispatch({\n        type: \"HAS_RETIREMENT_SAVINGS\",\n        hasRetirementSavings: 0\n      });\n      dispatch({\n        type: \"HAS_NON_RETIREMENT_SAVINGS\",\n        hasNonRetirementSavings: 0\n      });\n    }\n  }, [hasSavings]);\n  useEffect(function () {\n    dispatch({\n      type: \"HAS_RETIREMENT_SAVINGS\",\n      hasRetirementSavings: hasRetirementSavings\n    });\n  }, [hasRetirementSavings]);\n  useEffect(function () {\n    dispatch({\n      type: \"HAS_NON_RETIREMENT_SAVINGS\",\n      hasNonRetirementSavings: hasNonRetirementSavings\n    });\n  }, [hasNonRetirementSavings]);\n  return __jsx(\"div\", null, __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 10,\n      offset: 1\n    },\n    md: {\n      span: 10,\n      offset: 1\n    },\n    lg: {\n      span: 10,\n      offset: 1\n    }\n  }, progressInstance)), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 8,\n      offset: 2\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.header\n  }, \"Do you have any savings?\")), __jsx(Col, {\n    xs: 1,\n    md: 1,\n    lg: 1\n  }, __jsx(QuestionCircle, {\n    size: 30,\n    onClick: function onClick() {\n      setShowTitle(true);\n    },\n    style: {\n      position: 'relative',\n      top: '18px',\n      right: '100%'\n    }\n  }))), __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    xs: 6,\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 3,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: function onClick() {\n      setHasSavings(true);\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\"\n  }, \"Yes\"), \" \"), __jsx(Col, {\n    xs: 6,\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: function onClick() {\n      setHasSavings(false);\n      router.push('/debt');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\"\n  }, \"No\"), \" \")), hasSavings ? __jsx(React.Fragment, null, __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 4,\n      offset: 1\n    },\n    md: {\n      span: 2,\n      offset: 2\n    },\n    lg: {\n      span: 2,\n      offset: 2\n    }\n  }, __jsx(\"h5\", {\n    className: styles.h5\n  }, \"Retirement savings\")), __jsx(Col, {\n    xs: {\n      span: 6\n    },\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 6\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\"\n  }, __jsx(InputGroup.Prepend, null, __jsx(InputGroup.Text, null, \"$\")), __jsx(FormControl, {\n    placeholder: \"Retirment Savings\",\n    \"aria-label\": \"Retirment Savings\",\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: function onChange(e) {\n      setHasRetirementSavings(parseInt(e.target.value));\n    }\n  })))), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 4,\n      offset: 1\n    },\n    md: {\n      span: 2,\n      offset: 2\n    },\n    lg: {\n      span: 2,\n      offset: 2\n    }\n  }, __jsx(\"h5\", {\n    className: styles.h5\n  }, \"Non retirement savings\")), __jsx(Col, {\n    xs: {\n      span: 6\n    },\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 6\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\"\n  }, __jsx(InputGroup.Prepend, null, __jsx(InputGroup.Text, null, \"$\")), __jsx(FormControl, {\n    placeholder: \"Non Retirement Savings\",\n    \"aria-label\": \"Non Retirement Savings\",\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: function onChange(e) {\n      setHasNonRetirementSavings(parseInt(e.target.value));\n    }\n  })))), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 8,\n      offset: 2\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\",\n    onClick: function onClick() {\n      return router.push('/debt');\n    }\n  }, \"Next\"), \" \"))) : null, __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 11\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    },\n    onClick: function onClick() {\n      setShowOwnABusiness(true);\n    }\n  }, __jsx(\"h5\", {\n    className: styles.header\n  }, __jsx(\"u\", null, \"What if I own a business?\"))), __jsx(Col, {\n    xs: 1,\n    md: 1,\n    lg: 1\n  }, __jsx(QuestionCircle, {\n    size: 25,\n    onClick: function onClick() {\n      setShowOwnABusiness(true);\n    },\n    style: {\n      position: 'relative',\n      top: '12px',\n      right: '35px'\n    }\n  }))), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 11\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    },\n    onClick: function onClick() {\n      setShowBenefitPension(true);\n    }\n  }, __jsx(\"h5\", {\n    className: styles.header\n  }, __jsx(\"u\", null, \"What if I have a defined benefits pension?\"))), __jsx(Col, {\n    xs: 1,\n    md: 1,\n    lg: 1\n  }, __jsx(QuestionCircle, {\n    size: 25,\n    onClick: function onClick() {\n      setShowBenefitPension(true);\n    },\n    style: {\n      position: 'relative',\n      top: '12px',\n      right: '35px'\n    }\n  })))), __jsx(Modal, {\n    show: showTitle,\n    onHide: handleCloseTitle\n  }, __jsx(Modal.Body, null, \"Say \\u201CYes\\u201D if you have money in any of the following: bank accounts, investment accounts, pensions, TFSAs, RRSPs or equity in a corporation.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: handleCloseTitle\n  }, \"Close\"))), __jsx(Modal, {\n    show: showOwnABusiness,\n    onHide: handleCloseOwnABusiness\n  }, __jsx(Modal.Body, null, \"When a person dies, it\\u2019s likely that any businesses he/she owns will be sold to provide money for his/her family. Sometimes, it\\u2019s required if, for example, the person has business partners and there\\u2019s a contract in place that mandates the deceased person must be \\u201Cbought out.\\u201D It can also be optional if, for example, the person\\u2019s family wants the money to cover expenses. Either way, it\\u2019s important to include the value of the business (including any assets or savings owned by the corporation) in your \\u201Cnon-retirement savings.\\u201D Savings within a corporation often have large tax implications upon withdrawal so it would be wise not to assume that the full amount will be available to pay for personal or family expenses. Although the exact amount is dependent on your personal income tax rate at the time of withdrawal, for purposes of this assessment, please approximate the available amount by multiplying the savings by 80%. For example, if you have $100,000 of savings in an account owned by a corporation, add $80,000 to your \\u201Cnon-retirement savings\\u201D ($100,000 \\xD7 80% = $80,000). Don\\u2019t forget to add this to all other \\u201Cnon-retirement savings\\u201D that are in personal accounts. For example, if you have $100,000 of savings in an account owned by a corporation and $200,000 of \\u201Cnon-retirement savings\\u201D in a personal bank and/or investment account, then your total \\u201Cnon-retirement savings\\u201D would be $280,000 ($100,000 \\xD7 80% + $200,000 = $280,000).\\u201D\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: handleCloseOwnABusiness\n  }, \"Close\"))), __jsx(Modal, {\n    show: showBenefitPension,\n    onHide: handleCloseBenefitPension\n  }, __jsx(Modal.Body, null, \"When a person dies, it\\u2019s likely that any businesses he/she owns will be sold to provide money for his/her family. Sometimes, it\\u2019s required if, for example, the person has business partners and there\\u2019s a contract in place that mandates the deceased person must be \\u201Cbought out.\\u201D It can also be optional if, for example, the person\\u2019s family wants the money to cover expenses. Either way, it\\u2019s important to include the value of the business (including any assets or savings owned by the corporation) in your \\u201Cnon-retirement savings.\\u201D Savings within a corporation often have large tax implications upon withdrawal so it would be wise not to assume that the full amount will be available to pay for personal or family expenses. Although the exact amount is dependent on your personal income tax rate at the time of withdrawal, for purposes of this assessment, please approximate the available amount by multiplying the savings by 80%. For example, if you have $100,000 of savings in an account owned by a corporation, add $80,000 to your \\u201Cnon-retirement savings\\u201D ($100,000 \\xD7 80% = $80,000). Don\\u2019t forget to add this to all other \\u201Cnon-retirement savings\\u201D that are in personal accounts. For example, if you have $100,000 of savings in an account owned by a corporation and $200,000 of \\u201Cnon-retirement savings\\u201D in a personal bank and/or investment account, then your total \\u201Cnon-retirement savings\\u201D would be $280,000 ($100,000 \\xD7 80% + $200,000 = $280,000).\\u201D\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: handleCloseBenefitPension\n  }, \"Close\"))));\n}\n\n_s(SavingsForm, \"IsMRLwgAVOQLfWLJ4WJhBf4kxpo=\", false, function () {\n  return [useRouter];\n});\n\n_c = SavingsForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SavingsForm\");","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/components/SavingsForm.js"],"names":["React","useContext","useEffect","useState","useRouter","Button","styles","Container","Row","Col","DispatchContext","ProgressBar","InputGroup","FormControl","Modal","QuestionCircle","SavingsForm","router","dispatch","hasSavings","setHasSavings","hasRetirementSavings","setHasRetirementSavings","hasNonRetirementSavings","setHasNonRetirementSavings","showTitle","setShowTitle","handleCloseTitle","showOwnABusiness","setShowOwnABusiness","handleCloseOwnABusiness","showBenefitPension","setShowBenefitPension","handleCloseBenefitPension","now","progressInstance","height","type","span","offset","header","position","top","right","width","push","h5","e","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport { useRouter } from \"next/router\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./rentOrOwnForm.module.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Modal from \"react-bootstrap/Modal\";\nimport {QuestionCircle} from \"react-bootstrap-icons\";\n\nexport default function SavingsForm() {\n    const router = useRouter();\n    const dispatch = useContext(DispatchContext);\n    const [hasSavings, setHasSavings] = useState(false);\n    //has life insurance\n    const [hasRetirementSavings, setHasRetirementSavings] = useState('');\n    const [hasNonRetirementSavings, setHasNonRetirementSavings] = useState('');\n    // modal\n    const [showTitle, setShowTitle] = useState(false);\n    const handleCloseTitle = () => setShowTitle(false);\n    const [showOwnABusiness, setShowOwnABusiness] = useState(false);\n    const handleCloseOwnABusiness = () => setShowOwnABusiness(false);\n    const [showBenefitPension, setShowBenefitPension] = useState(false);\n    const handleCloseBenefitPension = () => setShowBenefitPension(false);\n\n    // progress bar\n    const now = 85;\n    const progressInstance = <ProgressBar style={{height: '0.5rem'}} now={now} />;\n\n    useEffect(() => {\n        dispatch({ type: \"HAS_SAVINGS\", hasSavings: hasSavings });\n        if (hasSavings === false) {\n            dispatch({ type: \"HAS_RETIREMENT_SAVINGS\", hasRetirementSavings: 0 });\n            dispatch({ type: \"HAS_NON_RETIREMENT_SAVINGS\", hasNonRetirementSavings: 0 });\n        }\n    }, [hasSavings]);\n\n    useEffect(() => {\n        dispatch({ type: \"HAS_RETIREMENT_SAVINGS\", hasRetirementSavings: hasRetirementSavings });\n    }, [hasRetirementSavings]);\n\n    useEffect(() => {\n        dispatch({ type: \"HAS_NON_RETIREMENT_SAVINGS\", hasNonRetirementSavings: hasNonRetirementSavings });\n    }, [hasNonRetirementSavings]);\n\n    return (\n        <div>\n            <br />\n            <Row>\n                <Col\n                    xs={{ span: 10, offset: 1 }}\n                    md={{ span: 10, offset: 1 }}\n                    lg={{ span: 10, offset: 1 }}\n                >\n                    {progressInstance}\n                </Col>\n            </Row>\n            <br />\n            <Row>\n                <Col xs={{span: 8, offset: 2}} md={{ span: 6, offset: 3 }} lg={{ span: 6, offset: 3 }}>\n                    <h2 className={styles.header}>Do you have any savings?</h2>\n                </Col>\n                <Col xs={1} md={1} lg={1}>\n                    <QuestionCircle\n                        size={30}\n                        onClick={() => {setShowTitle(true)}}\n                        style={{position: 'relative', top: '18px', right: '100%'}}\n                    />\n                </Col>\n            </Row>\n            <Container>\n                <Row>\n                    <Col xs={6} md={{ span: 6 }} lg={{ span: 3, offset: 3 }}>\n                        <Button\n                            className=\"align-button\"\n                            onClick={() => {\n                                setHasSavings(true);\n                            }}\n                            style={{ width: \"100%\" }}\n                            variant=\"outline-primary\"\n                            size=\"lg\"\n                        >\n                            Yes\n                        </Button>{\" \"}\n                    </Col>\n                    <Col xs={6} md={{ span: 6 }} lg={{ span: 3 }}>\n                        <Button\n                            className=\"align-button\"\n                            onClick={() => {\n                                setHasSavings(false);\n                                router.push('/debt');\n                            }}\n                            style={{ width: \"100%\" }}\n                            variant=\"outline-primary\"\n                            size=\"lg\"\n                        >\n                            No\n                        </Button>{\" \"}\n                    </Col>\n                </Row>\n                <Choose>\n                    <When condition={hasSavings}>\n                        <>\n                            <br/>\n                            <Row>\n                                <Col\n                                    xs={{ span: 4, offset: 1 }}\n                                    md={{ span: 2, offset: 2 }}\n                                    lg={{ span: 2, offset: 2 }}\n                                >\n                                    <h5 className={styles.h5}>Retirement savings</h5>\n                                </Col>\n                                <Col\n                                    xs={{ span: 6 }}\n                                    md={{ span: 6 }}\n                                    lg={{ span: 6 }}\n                                >\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>$</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"Retirment Savings\"\n                                            aria-label=\"Retirment Savings\"\n                                            aria-describedby=\"basic-addon2\"\n                                            onChange={(e) => {\n                                                setHasRetirementSavings(parseInt(e.target.value))\n                                            }}\n                                        />\n                                    </InputGroup>\n                                </Col>\n                            </Row>\n                            <br/>\n                            <Row>\n                                <Col\n                                    xs={{ span: 4, offset: 1 }}\n                                    md={{ span: 2, offset: 2 }}\n                                    lg={{ span: 2, offset: 2 }}\n                                >\n                                    <h5 className={styles.h5}>Non retirement savings</h5>\n                                </Col>\n                                <Col\n                                    xs={{ span: 6 }}\n                                    md={{ span: 6 }}\n                                    lg={{ span: 6 }}\n                                >\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>$</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"Non Retirement Savings\"\n                                            aria-label=\"Non Retirement Savings\"\n                                            aria-describedby=\"basic-addon2\"\n                                            onChange={(e) => {setHasNonRetirementSavings(parseInt(e.target.value))}}\n                                        />\n                                    </InputGroup>\n                                </Col>\n                            </Row>\n                            <br />\n                            <Row>\n                                <Col\n                                    xs={{ span: 8, offset: 2 }}\n                                    md={{ span: 6, offset: 3 }}\n                                    lg={{ span: 6, offset: 3 }}\n                                >\n                                    <Button\n                                        style={{ width: \"100%\" }}\n                                        variant=\"outline-primary\"\n                                        size=\"lg\"\n                                        onClick={()=>router.push('/debt')}\n                                    >\n                                        Next\n                                    </Button>{\" \"}\n                                </Col>\n                            </Row>\n                        </>\n                    </When>\n                </Choose>\n                <Row>\n                    <Col\n                        xs={{ span: 11 }}\n                        md={{ span: 6, offset: 3 }}\n                        lg={{ span: 6, offset: 3 }}\n                        onClick={() => {setShowOwnABusiness(true)}}\n                    >\n                        <h5 className={styles.header}><u>What if I own a business?</u></h5>\n                    </Col>\n                    <Col xs={1} md={1} lg={1}>\n                        <QuestionCircle\n                            size={25}\n                            onClick={() => {setShowOwnABusiness(true)}}\n                            style={{position: 'relative', top: '12px', right: '35px'}}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col\n                        xs={{ span: 11 }}\n                        md={{ span: 6, offset: 3 }}\n                        lg={{ span: 6, offset: 3 }}\n                        onClick={() => {setShowBenefitPension(true)}}\n                    >\n                        <h5 className={styles.header}><u>What if I have a defined benefits pension?</u></h5>\n                    </Col>\n                    <Col xs={1} md={1} lg={1}>\n                        <QuestionCircle\n                            size={25}\n                            onClick={() => {setShowBenefitPension(true)}}\n                            style={{position: 'relative', top: '12px', right: '35px'}}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n            {/*title*/}\n            <Modal show={showTitle} onHide={handleCloseTitle}>\n                <Modal.Body>Say “Yes” if you have money in any of the following: bank accounts, investment accounts, pensions, TFSAs, RRSPs or equity in a corporation.</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-primary\" onClick={handleCloseTitle}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {/*own a business*/}\n            <Modal show={showOwnABusiness} onHide={handleCloseOwnABusiness}>\n                <Modal.Body>When a person dies, it’s likely that any businesses he/she owns will be sold to provide money for his/her family. Sometimes, it’s required if, for example, the person has business partners and there’s a contract in place that mandates the deceased person must be “bought out.” It can also be optional if, for example, the person’s family wants the money to cover expenses. Either way, it’s important to include the value of the business (including any assets or savings owned by the corporation) in your “non-retirement savings.”\n\n                    Savings within a corporation often have large tax implications upon withdrawal so it would be wise not to assume that the full amount will be available to pay for personal or family expenses. Although the exact amount is dependent on your personal income tax rate at the time of withdrawal, for purposes of this assessment, please approximate the available amount by multiplying the savings by 80%.\n\n                    For example, if you have $100,000 of savings in an account owned by a corporation, add $80,000 to your “non-retirement savings” ($100,000 × 80% = $80,000).\n\n                    Don’t forget to add this to all other “non-retirement savings” that are in personal accounts. For example, if you have $100,000 of savings in an account owned by a corporation and $200,000 of “non-retirement savings” in a personal bank and/or investment account, then your total “non-retirement savings” would be $280,000 ($100,000 × 80% + $200,000 = $280,000).”</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-primary\" onClick={handleCloseOwnABusiness}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {/*Benefit pension*/}\n            <Modal show={showBenefitPension} onHide={handleCloseBenefitPension}>\n                <Modal.Body>When a person dies, it’s likely that any businesses he/she owns will be sold to provide money for his/her family. Sometimes, it’s required if, for example, the person has business partners and there’s a contract in place that mandates the deceased person must be “bought out.” It can also be optional if, for example, the person’s family wants the money to cover expenses. Either way, it’s important to include the value of the business (including any assets or savings owned by the corporation) in your “non-retirement savings.”\n\n                    Savings within a corporation often have large tax implications upon withdrawal so it would be wise not to assume that the full amount will be available to pay for personal or family expenses. Although the exact amount is dependent on your personal income tax rate at the time of withdrawal, for purposes of this assessment, please approximate the available amount by multiplying the savings by 80%.\n\n                    For example, if you have $100,000 of savings in an account owned by a corporation, add $80,000 to your “non-retirement savings” ($100,000 × 80% = $80,000).\n\n                    Don’t forget to add this to all other “non-retirement savings” that are in personal accounts. For example, if you have $100,000 of savings in an account owned by a corporation and $200,000 of “non-retirement savings” in a personal bank and/or investment account, then your total “non-retirement savings” would be $280,000 ($100,000 × 80% + $200,000 = $280,000).”</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-primary\" onClick={handleCloseBenefitPension}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}