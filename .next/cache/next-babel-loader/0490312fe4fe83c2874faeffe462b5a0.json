{"ast":null,"code":"var _jsxFileName = \"/Users/sammyunterman/WebstormProjects/react-next/pages/post.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { withRouter } from \"next/router\";\n\nconst Post = ({\n  id,\n  comments\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, \"comments for post # \", id), comments.map(comment => __jsx(Comment, _extends({}, comment, {\n  key: comments.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }\n}))));\n\nconst Comment = ({\n  email,\n  body\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, __jsx(\"h5\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, email), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n}, body));\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n  const {\n    data\n  } = res;\n  console.log(data);\n  return _objectSpread(_objectSpread({}, query), {}, {\n    comments: data\n  });\n};\n\nexport default withRouter(Post);","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/pages/post.js"],"names":["React","axios","withRouter","Post","id","comments","map","comment","Comment","email","body","getInitialProps","query","res","get","data","console","log"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,aAAzB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAD,KACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyBD,EAAzB,CADJ,EAEKC,QAAQ,CAACC,GAAT,CAAaC,OAAO,IACjB,MAAC,OAAD,eAAaA,OAAb;AAAsB,EAAA,GAAG,EAAEF,QAAQ,CAACD,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADH,CAFL,CADJ;;AASA,MAAMI,OAAO,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIC,IAAJ,CAFJ,CADJ;;AAMAP,IAAI,CAACQ,eAAL,GAAuB,OAAM;AAACC,EAAAA;AAAD,CAAN,KAAkB;AACrC,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,wDAAV,CAAlB;AACA,QAAM;AAACC,IAAAA;AAAD,MAASF,GAAf;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,yCAAWH,KAAX;AAAkBP,IAAAA,QAAQ,EAAEU;AAA5B;AACH,CALD;;AAMA,eAAeb,UAAU,CAACC,IAAD,CAAzB","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {withRouter} from \"next/router\";\n\nconst Post = ({id, comments}) => (\n    <div>\n        <h1>comments for post # {id}</h1>\n        {comments.map(comment => (\n            <Comment {...comment} key={comments.id}/>\n        ))}\n    </div>\n);\n\nconst Comment = ({email, body}) => (\n    <div>\n        <h5>{email}</h5>\n        <p>{body}</p>\n    </div>\n)\nPost.getInitialProps = async({query}) => {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=3\");\n    const {data} = res;\n    console.log(data)\n    return {...query, comments: data};\n};\nexport default withRouter(Post);\n"]},"metadata":{},"sourceType":"module"}