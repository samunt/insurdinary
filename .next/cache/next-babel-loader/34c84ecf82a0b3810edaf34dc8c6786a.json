{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useReducer } from 'react';\n\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n  _s();\n\n  // make piece of state based on of value in localstorage (or default)\n  var _useReducer = useReducer(reducer, defaultVal, function () {\n    var val;\n\n    try {\n      val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal));\n    } catch (e) {\n      val = defaultVal;\n    }\n\n    return val;\n  }),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state]);\n  return [state, dispatch];\n}\n\n_s(useLocalStorageReducer, \"HoCcXzU5xoBfWTKafUIhypPBPMU=\");\n\nexport { useLocalStorageReducer };","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/hooks/useLocalStorageReducer.js"],"names":["useEffect","useReducer","useLocalStorageReducer","key","defaultVal","reducer","val","JSON","parse","window","localStorage","getItem","String","e","state","dispatch","setItem","stringify"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,QAAoC,OAApC;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqCC,UAArC,EAAiDC,OAAjD,EAA0D;AAAA;;AACtD;AADsD,oBAE5BJ,UAAU,CAACI,OAAD,EAAUD,UAAV,EAAsB,YAAM;AAC5D,QAAIE,GAAJ;;AACA,QAAI;AACAA,MAAAA,GAAG,GAAGC,IAAI,CAACC,KAAL,CACFC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,GAA5B,KAAoCS,MAAM,CAACR,UAAD,CADxC,CAAN;AAGH,KAJD,CAKA,OAAOS,CAAP,EAAS;AACLP,MAAAA,GAAG,GAAGF,UAAN;AACH;;AACD,WAAOE,GAAP;AACH,GAXmC,CAFkB;AAAA,MAE/CQ,KAF+C;AAAA,MAExCC,QAFwC;;AActDf,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4Bb,GAA5B,EAAiCI,IAAI,CAACU,SAAL,CAAeH,KAAf,CAAjC;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAGA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACH;;GAlBQb,sB;;AAmBT,SAAQA,sBAAR","sourcesContent":["import {useEffect, useReducer} from 'react';\n\nfunction useLocalStorageReducer(key, defaultVal, reducer) {\n    // make piece of state based on of value in localstorage (or default)\n    const [state, dispatch] = useReducer(reducer, defaultVal, () => {\n        let val;\n        try {\n            val = JSON.parse(\n                window.localStorage.getItem(key) || String(defaultVal)\n            )\n        }\n        catch (e){\n            val = defaultVal\n        }\n        return val\n    });\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state))\n    }, [state]);\n    return [state, dispatch]\n}\nexport {useLocalStorageReducer}\n"]},"metadata":{},"sourceType":"module"}