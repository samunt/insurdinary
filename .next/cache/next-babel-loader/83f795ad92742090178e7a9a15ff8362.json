{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_SPOUSE\":\n      const key = \"spouse\";\n\n      if (state.some(obj => key in obj)) {\n        return state.map(obj => key in obj ? {\n          [key]: action[key]\n        } : obj);\n      } else {\n        return [...state, {\n          [key]: action[key]\n        }];\n      }\n\n    case \"SPOUSE_AGE\":\n      console.log(action.spouseAge);\n      return [...state, {\n        spouseAge: action.spouseAge\n      }];\n\n    case \"HAS_CHILDREN\":\n      console.log(action.hasChildren);\n      return [...state, {\n        hasChildren: action.hasChildren\n      }];\n\n    case \"NUMBER_OF_CHILDREN\":\n      console.log(action.numberOfChildren);\n      return [...state, {\n        numberOfChildren: action.numberOfChildren\n      }];\n\n    case \"CHILDREN_AGE_ARRAY\":\n      console.log('children age array', action.childrenAgeArray);\n      return [...state, {\n        childrenAgeArray: action.childrenAgeArray\n      }];\n\n    case \"PAY_FOR_COLLEGE\":\n      console.log('pay for college', action.payForCollege);\n      return [...state, {\n        payForCollege: action.payForCollege\n      }];\n\n    case \"DATE_OF_BIRTH\":\n      console.log('pay for college', action.dob);\n      return [...state, {\n        dob: action.dob\n      }];\n\n    case \"SEX\":\n      console.log('sex', action.sexForm);\n      return [...state, {\n        sex: action.sexForm\n      }];\n\n    case \"TOBACCO\":\n      console.log('tobacco', action.tobacco);\n      return [...state, {\n        tobacco: action.tobacco\n      }];\n\n    case \"HEALTH_CONDITION\":\n      console.log('health', action.health);\n      return [...state, {\n        health: action.health\n      }];\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/reducers/form.reducer.js"],"names":["reducer","state","action","type","key","some","obj","map","console","log","spouseAge","hasChildren","numberOfChildren","childrenAgeArray","payForCollege","dob","sexForm","sex","tobacco","health"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,YAAL;AACI,YAAMC,GAAG,GAAG,QAAZ;;AACA,UAAIH,KAAK,CAACI,IAAN,CAAWC,GAAG,IAAIF,GAAG,IAAIE,GAAzB,CAAJ,EAAmC;AAC/B,eAAOL,KAAK,CAACM,GAAN,CAAUD,GAAG,IAAIF,GAAG,IAAIE,GAAP,GAAa;AAAC,WAACF,GAAD,GAAOF,MAAM,CAACE,GAAD;AAAd,SAAb,GAAoCE,GAArD,CAAP;AACH,OAFD,MAEO;AACH,eAAO,CAAC,GAAGL,KAAJ,EAAW;AAAC,WAACG,GAAD,GAAOF,MAAM,CAACE,GAAD;AAAd,SAAX,CAAP;AACH;;AACL,SAAK,YAAL;AACII,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,SAAnB;AACA,aAAQ,CAAC,GAAGT,KAAJ,EAAW;AAACS,QAAAA,SAAS,EAAER,MAAM,CAACQ;AAAnB,OAAX,CAAR;;AACJ,SAAK,cAAL;AACIF,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACS,WAAnB;AACA,aAAQ,CAAC,GAAGV,KAAJ,EAAW;AAACU,QAAAA,WAAW,EAAET,MAAM,CAACS;AAArB,OAAX,CAAR;;AACJ,SAAK,oBAAL;AACIH,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACU,gBAAnB;AACA,aAAQ,CAAC,GAAGX,KAAJ,EAAW;AAACW,QAAAA,gBAAgB,EAAEV,MAAM,CAACU;AAA1B,OAAX,CAAR;;AACJ,SAAK,oBAAL;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCP,MAAM,CAACW,gBAAxC;AACA,aAAQ,CAAC,GAAGZ,KAAJ,EAAW;AAACY,QAAAA,gBAAgB,EAAEX,MAAM,CAACW;AAA1B,OAAX,CAAR;;AACJ,SAAK,iBAAL;AACIL,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,MAAM,CAACY,aAAtC;AACA,aAAQ,CAAC,GAAGb,KAAJ,EAAW;AAACa,QAAAA,aAAa,EAAEZ,MAAM,CAACY;AAAvB,OAAX,CAAR;;AACJ,SAAK,eAAL;AACIN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BP,MAAM,CAACa,GAAtC;AACA,aAAQ,CAAC,GAAGd,KAAJ,EAAW;AAACc,QAAAA,GAAG,EAAEb,MAAM,CAACa;AAAb,OAAX,CAAR;;AACJ,SAAK,KAAL;AACIP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,MAAM,CAACc,OAA1B;AACA,aAAQ,CAAC,GAAGf,KAAJ,EAAW;AAACgB,QAAAA,GAAG,EAAEf,MAAM,CAACc;AAAb,OAAX,CAAR;;AACJ,SAAK,SAAL;AACIR,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,MAAM,CAACgB,OAA9B;AACA,aAAQ,CAAC,GAAGjB,KAAJ,EAAW;AAACiB,QAAAA,OAAO,EAAEhB,MAAM,CAACgB;AAAjB,OAAX,CAAR;;AACJ,SAAK,kBAAL;AACIV,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,MAAM,CAACiB,MAA7B;AACA,aAAQ,CAAC,GAAGlB,KAAJ,EAAW;AAACkB,QAAAA,MAAM,EAAEjB,MAAM,CAACiB;AAAhB,OAAX,CAAR;;AACJ;AACI,aAAOlB,KAAP;AApCR;AAsCH,CAvCD;;AAwCA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\n    switch(action.type){\n        case \"ADD_SPOUSE\":\n            const key = \"spouse\";\n            if (state.some(obj => key in obj)) {\n                return state.map(obj => key in obj ? {[key]: action[key]} : obj)\n            } else {\n                return [...state, {[key]: action[key]}]\n            }\n        case \"SPOUSE_AGE\":\n            console.log(action.spouseAge);\n            return ([...state, {spouseAge: action.spouseAge}]);\n        case \"HAS_CHILDREN\":\n            console.log(action.hasChildren);\n            return ([...state, {hasChildren: action.hasChildren}]);\n        case \"NUMBER_OF_CHILDREN\":\n            console.log(action.numberOfChildren);\n            return ([...state, {numberOfChildren: action.numberOfChildren}]);\n        case \"CHILDREN_AGE_ARRAY\":\n            console.log('children age array',action.childrenAgeArray);\n            return ([...state, {childrenAgeArray: action.childrenAgeArray}]);\n        case \"PAY_FOR_COLLEGE\":\n            console.log('pay for college', action.payForCollege);\n            return ([...state, {payForCollege: action.payForCollege}]);\n        case \"DATE_OF_BIRTH\":\n            console.log('pay for college', action.dob);\n            return ([...state, {dob: action.dob}]);\n        case \"SEX\":\n            console.log('sex', action.sexForm);\n            return ([...state, {sex: action.sexForm}]);\n        case \"TOBACCO\":\n            console.log('tobacco', action.tobacco);\n            return ([...state, {tobacco: action.tobacco}]);\n        case \"HEALTH_CONDITION\":\n            console.log('health', action.health);\n            return ([...state, {health: action.health}]);\n        default:\n            return state\n    }\n};\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}