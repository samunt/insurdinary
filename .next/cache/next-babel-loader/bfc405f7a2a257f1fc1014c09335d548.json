{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { v4 as uuid } from \"uuid\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, {\n        id: uuid(),\n        task: action.task,\n        completed: false\n      }];\n\n    case \"REMOVE\":\n      return state.filter(todo => todo.id !== action.id);\n\n    case \"TOGGLE\":\n      return state.map(todo => todo.id === action.id ? _objectSpread(_objectSpread({}, state), {}, {\n        completed: !todo.completed\n      }) : todo);\n\n    case \"EDIT\":\n      return state.map(todo => todo.id === action.id ? _objectSpread(_objectSpread({}, state), {}, {\n        task: action.newTask\n      }) : todo);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/reducers/todo.reducer.js"],"names":["v4","uuid","reducer","state","action","type","id","task","completed","filter","todo","map","newTask"],"mappings":";;;;;;AAAA,SAAQA,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,KAAL;AACI,aAAQ,CAAC,GAAGF,KAAJ,EAAW;AAACG,QAAAA,EAAE,EAAEL,IAAI,EAAT;AAAaM,QAAAA,IAAI,EAAEH,MAAM,CAACG,IAA1B;AAAgCC,QAAAA,SAAS,EAAC;AAA1C,OAAX,CAAR;;AACJ,SAAK,QAAL;AACI,aAAOL,KAAK,CAACM,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAxC,CAAP;;AACJ,SAAK,QAAL;AACI,aAAOH,KAAK,CAACQ,GAAN,CAAUD,IAAI,IACxBA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,mCAA4BH,KAA5B;AAAmCK,QAAAA,SAAS,EAAE,CAACE,IAAI,CAACF;AAApD,WAAiEE,IADvD,CAAP;;AAGJ,SAAK,MAAL;AACI,aAAOP,KAAK,CAACQ,GAAN,CAAUD,IAAI,IACzBA,IAAI,CAACJ,EAAL,KAAYF,MAAM,CAACE,EAAnB,mCAA4BH,KAA5B;AAAmCI,QAAAA,IAAI,EAAEH,MAAM,CAACQ;AAAhD,WAA4DF,IADjD,CAAP;;AAGJ;AACI,aAAOP,KAAP;AAdR;AAiBH,CAlBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import {v4 as uuid} from \"uuid\";\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case \"ADD\":\n            return ([...state, {id: uuid(), task: action.task, completed:false}])\n        case \"REMOVE\":\n            return state.filter(todo => todo.id !== action.id);\n        case \"TOGGLE\":\n            return state.map(todo =>\n         todo.id === action.id ? {...state, completed: !todo.completed} : todo\n        );\n        case \"EDIT\":\n            return state.map(todo =>\n        todo.id === action.id ? {...state, task: action.newTask } : todo\n        );\n        default:\n            return state\n\n    }\n};\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}