{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./rentOrOwnForm.module.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { QuestionCircle } from \"react-bootstrap-icons\";\nimport Modal from \"react-bootstrap/Modal\";\nexport default function rentOrOwnForm() {\n  const router = useRouter();\n  const dispatch = useContext(DispatchContext);\n  const {\n    0: lifeInsurance,\n    1: setLifeInsurance\n  } = useState(''); //has life insurance\n\n  const {\n    0: lifeInsuranceEmployer,\n    1: setLifeInsuranceEmployer\n  } = useState('');\n  const {\n    0: lifeInsurancePersonal,\n    1: setLifeInsurancePersonal\n  } = useState('');\n  const {\n    0: showHasLifeInsurance,\n    1: setShowHasLifeInsurance\n  } = useState(false);\n\n  const handleCloseHasLifeInsurance = () => setShowHasLifeInsurance(false);\n\n  const {\n    0: showExistingLifeInsurance,\n    1: setShowExistingLifeInsurance\n  } = useState(false);\n\n  const handleCloseExistingLifeInsurance = () => setShowExistingLifeInsurance(false); // progress bar\n\n\n  const now = 75;\n\n  const progressInstance = __jsx(ProgressBar, {\n    style: {\n      height: '0.5rem'\n    },\n    now: now\n  });\n\n  useEffect(() => {\n    dispatch({\n      type: \"LIFE_INSURANCE\",\n      lifeInsurance: lifeInsurance\n    });\n\n    if (lifeInsurance === false) {\n      dispatch({\n        type: \"LIFE_INSURANCE_EMPLOYER\",\n        lifeInsuranceEmployer: 0\n      });\n      dispatch({\n        type: \"LIFE_INSURANCE_PERSONAL\",\n        lifeInsurancePersonal: 0\n      });\n    }\n  }, [lifeInsurance]);\n  useEffect(() => {\n    dispatch({\n      type: \"LIFE_INSURANCE_EMPLOYER\",\n      lifeInsuranceEmployer: lifeInsuranceEmployer\n    });\n  }, [lifeInsuranceEmployer]);\n  useEffect(() => {\n    dispatch({\n      type: \"LIFE_INSURANCE_PERSONAL\",\n      lifeInsurancePersonal: lifeInsurancePersonal\n    });\n  }, [lifeInsurancePersonal]);\n  return __jsx(\"div\", null, __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 10,\n      offset: 1\n    },\n    md: {\n      span: 10,\n      offset: 1\n    },\n    lg: {\n      span: 10,\n      offset: 1\n    }\n  }, progressInstance)), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 8,\n      offset: 2\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(\"h2\", {\n    className: styles.header\n  }, \"Do you have life insurance?\")), __jsx(Col, {\n    xs: 1,\n    md: 1,\n    lg: 1\n  }, __jsx(QuestionCircle, {\n    size: 30,\n    onClick: () => {\n      setShowHasLifeInsurance(true);\n    },\n    style: {\n      position: 'relative',\n      top: '18px',\n      right: '100%'\n    }\n  }))), __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    xs: 6,\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 3,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: () => {\n      setLifeInsurance(true);\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\"\n  }, \"Yes\"), \" \"), __jsx(Col, {\n    xs: 6,\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 3\n    }\n  }, __jsx(Button, {\n    className: \"align-button\",\n    onClick: () => {\n      setLifeInsurance(false);\n      router.push('/savings');\n    },\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\"\n  }, \"No\"), \" \")), lifeInsurance ? __jsx(React.Fragment, null, __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 4,\n      offset: 1\n    },\n    md: {\n      span: 2,\n      offset: 2\n    },\n    lg: {\n      span: 2,\n      offset: 2\n    }\n  }, __jsx(\"h5\", {\n    className: styles.h5\n  }, \"Employer Life Insurance\")), __jsx(Col, {\n    xs: {\n      span: 6\n    },\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 6\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\"\n  }, __jsx(InputGroup.Prepend, null, __jsx(InputGroup.Text, null, \"$\")), __jsx(FormControl, {\n    placeholder: \"Employer Life Insurance\",\n    \"aria-label\": \"Employer Life Insurance\",\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: e => {\n      setLifeInsuranceEmployer(parseInt(e.target.value));\n    }\n  })))), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 4,\n      offset: 1\n    },\n    md: {\n      span: 2,\n      offset: 2\n    },\n    lg: {\n      span: 2,\n      offset: 2\n    }\n  }, __jsx(\"h5\", {\n    className: styles.h5\n  }, \"Personal Life Insurance\")), __jsx(Col, {\n    xs: {\n      span: 6\n    },\n    md: {\n      span: 6\n    },\n    lg: {\n      span: 6\n    }\n  }, __jsx(InputGroup, {\n    className: \"mb-3\"\n  }, __jsx(InputGroup.Prepend, null, __jsx(InputGroup.Text, null, \"$\")), __jsx(FormControl, {\n    placeholder: \"Personal Life Insurance\",\n    \"aria-label\": \"Personal Life Insurance\",\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: e => {\n      setLifeInsurancePersonal(parseInt(e.target.value));\n    }\n  })))), __jsx(\"br\", null), __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 8,\n      offset: 2\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(Button, {\n    style: {\n      width: \"100%\"\n    },\n    variant: \"outline-primary\",\n    size: \"lg\",\n    onClick: () => {\n      router.push('/savings');\n    }\n  }, \"Next\"), \" \"))) : null, __jsx(Row, null, __jsx(Col, {\n    xs: {\n      span: 11\n    },\n    md: {\n      span: 6,\n      offset: 3\n    },\n    lg: {\n      span: 6,\n      offset: 3\n    },\n    onClick: () => {\n      setShowExistingLifeInsurance(true);\n    }\n  }, __jsx(\"h5\", {\n    className: styles.header\n  }, __jsx(\"u\", null, \"Why do you ask about my existing life insurance?\"))), __jsx(Col, {\n    xs: 1,\n    md: 1,\n    lg: 1\n  }, __jsx(QuestionCircle, {\n    size: 25,\n    onClick: () => {\n      setShowExistingLifeInsurance(true);\n    },\n    style: {\n      position: 'relative',\n      top: '12px',\n      right: '35px'\n    }\n  })))), __jsx(Modal, {\n    show: showHasLifeInsurance,\n    onHide: handleCloseHasLifeInsurance\n  }, __jsx(Modal.Body, null, \"Select \\u201CYes\\u201D if you already have life insurance coverage in place, but select \\u201CNo\\u201D if you don\\u2019t have existing life insurance or if your policies are expiring soon. This would include both policies you have through work or policies that you\\u2019ve purchased individually through a broker.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: handleCloseHasLifeInsurance\n  }, \"Close\"))), __jsx(Modal, {\n    show: showExistingLifeInsurance,\n    onHide: handleCloseExistingLifeInsurance\n  }, __jsx(Modal.Body, null, \"It\\u2019s important for us to have an accurate understanding of your finances, and your income is a key aspect of your financial situation. Our calculations will use your income (along with many other factors) to evaluate how much life insurance protection your family needs. The same goes for your partner\\u2019s income. We never recommend more coverage than you need. This prevents you from becoming \\u201Coverprotected,\\u201D keeping your costs low and freeing up money for you and your family. There are many features in our calculation that help us do this. We include your partner\\u2019s future income as money that will be available to pay for some of your family\\u2019s future expenses.\"), __jsx(Modal.Footer, null, __jsx(Button, {\n    variant: \"outline-primary\",\n    onClick: handleCloseExistingLifeInsurance\n  }, \"Close\"))));\n}","map":{"version":3,"sources":["/Users/sammyunterman/WebstormProjects/react-next/components/LifeinsuranceForm.js"],"names":["React","useContext","useEffect","useState","useRouter","Button","styles","Container","Row","Col","DispatchContext","ProgressBar","InputGroup","FormControl","QuestionCircle","Modal","rentOrOwnForm","router","dispatch","lifeInsurance","setLifeInsurance","lifeInsuranceEmployer","setLifeInsuranceEmployer","lifeInsurancePersonal","setLifeInsurancePersonal","showHasLifeInsurance","setShowHasLifeInsurance","handleCloseHasLifeInsurance","showExistingLifeInsurance","setShowExistingLifeInsurance","handleCloseExistingLifeInsurance","now","progressInstance","height","type","span","offset","header","position","top","right","width","push","h5","e","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\nimport { useRouter } from \"next/router\";\nimport Button from \"react-bootstrap/Button\";\nimport styles from \"./rentOrOwnForm.module.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { DispatchContext } from \"../contexts/FormContext\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport {QuestionCircle} from \"react-bootstrap-icons\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function rentOrOwnForm() {\n    const router = useRouter();\n    const dispatch = useContext(DispatchContext);\n    const [lifeInsurance, setLifeInsurance] = useState('');\n    //has life insurance\n    const [lifeInsuranceEmployer, setLifeInsuranceEmployer] = useState('');\n    const [lifeInsurancePersonal, setLifeInsurancePersonal] = useState('');\n    const [showHasLifeInsurance, setShowHasLifeInsurance] = useState(false);\n    const handleCloseHasLifeInsurance = () => setShowHasLifeInsurance(false);\n    const [showExistingLifeInsurance, setShowExistingLifeInsurance] = useState(false);\n    const handleCloseExistingLifeInsurance = () => setShowExistingLifeInsurance(false);\n\n    // progress bar\n    const now = 75;\n    const progressInstance = <ProgressBar style={{height: '0.5rem'}} now={now} />;\n\n    useEffect(() => {\n        dispatch({ type: \"LIFE_INSURANCE\", lifeInsurance: lifeInsurance });\n        if (lifeInsurance === false) {\n            dispatch({ type: \"LIFE_INSURANCE_EMPLOYER\", lifeInsuranceEmployer: 0 });\n            dispatch({ type: \"LIFE_INSURANCE_PERSONAL\", lifeInsurancePersonal: 0 });\n        }\n    }, [lifeInsurance]);\n\n    useEffect(() => {\n        dispatch({ type: \"LIFE_INSURANCE_EMPLOYER\", lifeInsuranceEmployer: lifeInsuranceEmployer });\n    }, [lifeInsuranceEmployer]);\n\n    useEffect(() => {\n        dispatch({ type: \"LIFE_INSURANCE_PERSONAL\", lifeInsurancePersonal: lifeInsurancePersonal });\n    }, [lifeInsurancePersonal]);\n\n    return (\n        <div>\n            <br />\n            <Row>\n                <Col\n                    xs={{ span: 10, offset: 1 }}\n                    md={{ span: 10, offset: 1 }}\n                    lg={{ span: 10, offset: 1 }}\n                >\n                    {progressInstance}\n                </Col>\n            </Row>\n            <br />\n            <Row>\n                <Col xs={{span: 8, offset: 2}} md={{ span: 6, offset: 3 }} lg={{ span: 6, offset: 3 }}>\n                    <h2 className={styles.header}>Do you have life insurance?</h2>\n                </Col>\n                <Col xs={1} md={1} lg={1}>\n                    <QuestionCircle\n                        size={30}\n                        onClick={() => {setShowHasLifeInsurance(true)}}\n                        style={{position: 'relative', top: '18px', right: '100%'}}\n                    />\n                </Col>\n            </Row>\n            <Container>\n                <Row>\n                    <Col xs={6} md={{ span: 6 }} lg={{ span: 3, offset: 3 }}>\n                        <Button\n                            className=\"align-button\"\n                            onClick={() => {\n                                setLifeInsurance(true);\n                            }}\n                            style={{ width: \"100%\" }}\n                            variant=\"outline-primary\"\n                            size=\"lg\"\n                        >\n                            Yes\n                        </Button>{\" \"}\n                    </Col>\n                    <Col xs={6} md={{ span: 6 }} lg={{ span: 3 }}>\n                        <Button\n                            className=\"align-button\"\n                            onClick={() => {\n                                setLifeInsurance(false);\n                                router.push('/savings');\n                            }}\n                            style={{ width: \"100%\" }}\n                            variant=\"outline-primary\"\n                            size=\"lg\"\n                        >\n                            No\n                        </Button>{\" \"}\n                    </Col>\n                </Row>\n                <Choose>\n                    <When condition={lifeInsurance}>\n                        <>\n                            <br/>\n                            <Row>\n                                <Col\n                                    xs={{ span: 4, offset: 1 }}\n                                    md={{ span: 2, offset: 2 }}\n                                    lg={{ span: 2, offset: 2 }}\n                                >\n                                    <h5 className={styles.h5}>Employer Life Insurance</h5>\n                                </Col>\n                                <Col\n                                    xs={{ span: 6 }}\n                                    md={{ span: 6 }}\n                                    lg={{ span: 6 }}\n                                >\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>$</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"Employer Life Insurance\"\n                                            aria-label=\"Employer Life Insurance\"\n                                            aria-describedby=\"basic-addon2\"\n                                            onChange={(e) => {\n                                                setLifeInsuranceEmployer(parseInt(e.target.value))\n                                            }}\n                                        />\n                                    </InputGroup>\n                                </Col>\n                            </Row>\n                            <br/>\n                            <Row>\n                                <Col\n                                    xs={{ span: 4, offset: 1 }}\n                                    md={{ span: 2, offset: 2 }}\n                                    lg={{ span: 2, offset: 2 }}\n                                >\n                                    <h5 className={styles.h5}>Personal Life Insurance</h5>\n                                </Col>\n                                <Col\n                                    xs={{ span: 6 }}\n                                    md={{ span: 6 }}\n                                    lg={{ span: 6 }}\n                                >\n                                    <InputGroup className=\"mb-3\">\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text>$</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <FormControl\n                                            placeholder=\"Personal Life Insurance\"\n                                            aria-label=\"Personal Life Insurance\"\n                                            aria-describedby=\"basic-addon2\"\n                                            onChange={(e) => {setLifeInsurancePersonal(parseInt(e.target.value))}}\n                                        />\n                                    </InputGroup>\n                                </Col>\n                            </Row>\n                            <br />\n                            <Row>\n                                <Col\n                                    xs={{ span: 8, offset: 2 }}\n                                    md={{ span: 6, offset: 3 }}\n                                    lg={{ span: 6, offset: 3 }}\n                                >\n                                    <Button\n                                        style={{ width: \"100%\" }}\n                                        variant=\"outline-primary\"\n                                        size=\"lg\"\n                                        onClick={()=> {router.push('/savings')}}\n                                    >\n                                        Next\n                                    </Button>{\" \"}\n                                </Col>\n                            </Row>\n                        </>\n                    </When>\n                </Choose>\n                <Row>\n                    <Col\n                        xs={{ span: 11 }}\n                        md={{ span: 6, offset: 3 }}\n                        lg={{ span: 6, offset: 3 }}\n                        onClick={() => {setShowExistingLifeInsurance(true)}}\n                    >\n                        <h5 className={styles.header}><u>Why do you ask about my existing life insurance?</u></h5>\n                    </Col>\n                    <Col xs={1} md={1} lg={1}>\n                        <QuestionCircle\n                            size={25}\n                            onClick={() => {setShowExistingLifeInsurance(true)}}\n                            style={{position: 'relative', top: '12px', right: '35px'}}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n            {/*title*/}\n            <Modal show={showHasLifeInsurance} onHide={handleCloseHasLifeInsurance}>\n                <Modal.Body>Select “Yes” if you already have life insurance coverage in place, but select “No” if you don’t have existing life insurance or if your policies are expiring soon. This would include both policies you have through work or policies that you’ve purchased individually through a broker.</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-primary\" onClick={handleCloseHasLifeInsurance}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {/*ask about existing insurance*/}\n            <Modal show={showExistingLifeInsurance} onHide={handleCloseExistingLifeInsurance}>\n                <Modal.Body>It’s important for us to have an accurate understanding of your finances, and your income is a key aspect of your financial situation. Our calculations will use your income (along with many other factors) to evaluate how much life insurance protection your family needs. The same goes for your partner’s income.\n\n                    We never recommend more coverage than you need. This prevents you from becoming “overprotected,” keeping your costs low and freeing up money for you and your family. There are many features in our calculation that help us do this. We include your partner’s future income as money that will be available to pay for some of your family’s future expenses.</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"outline-primary\" onClick={handleCloseExistingLifeInsurance}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n\n    )\n}\n"]},"metadata":{},"sourceType":"module"}